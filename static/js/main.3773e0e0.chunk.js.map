{"version":3,"sources":["NewItem.js","App.js","serviceWorker.js","index.js"],"names":["NewItem","state","labelName","editLabel","discription","color","Math","floor","random","list","eventIndex","changeVal","event","setState","target","value","changeDis","e1","onSubmit","newArray","find","element","label","window","alert","push","dis","onColor","ColorCode","onCancel","deleteLabel","index","newarray","confirm","filter","x","editButton","Edit","e3","changeEditVal","e2","name","changeEditDis","onEditColor","className","style","backgroundColor","this","type","onChange","placeholder","onClick","disabled","length","map","key","margin","class","React","Component","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3773e0e0.chunk.js","sourcesContent":["import React from 'react';\nimport './Newitem.css';\nclass NewItem extends React.Component{\n\tstate = {\n\t\tlabelName: '',\n\t\teditLabel:'',\n\t\tdiscription: '',\t\t\n\t\tcolor:'rgb(' + (Math.floor(Math.random() * 256)) + ',' + (Math.floor(Math.random() * 256)) + ',' + (Math.floor(Math.random() * 256)) + ')',\t\n\t\tlist:[],\n\t\teventIndex:null\n\t}\n\tchangeVal = (event) => {\n\t\tthis.setState({labelName: event.target.value});\n\t}\n\tchangeDis = (e1) => {\n\t\tthis.setState({discription:e1.target.value});\n\t}\n\tonSubmit = () => {\n\t\t\n\t\tlet newArray=[...this.state.list];\n\t\tif (newArray.find(element => element.label===this.state.labelName || element.color===this.state.color)){\n\t\t\twindow.alert('This label or label color is already used. Please use different label name or color')\n\t\t\tthis.setState({\n\t\t\t\tlist:newArray,\n\t\t\t\tlabelName:\"\",\n\t\t\t\tdiscription:\"\",\n\t\t\t\tcolor:'rgb(' + (Math.floor(Math.random() * 256)) + ',' + (Math.floor(Math.random() * 256)) + ',' + (Math.floor(Math.random() * 256)) + ')'\n\t\t\t})\n\t\t}else{\n\t\t\tnewArray.push({label:this.state.labelName,color:this.state.color,dis:this.state.discription})\n\t\t\tthis.setState({\n\t\t\t\tlist:newArray,\n\t\t\t\tlabelName:\"\",\n\t\t\t\tdiscription:\"\"\n\t\t\t})\n\t\t}\n\t}\n\tonColor = () => {\n\t\tvar ColorCode = 'rgb(' + (Math.floor(Math.random() * 256)) + ',' + (Math.floor(Math.random() * 256)) + ',' + (Math.floor(Math.random() * 256)) + ')'\n\t\tthis.setState({\n\t\t\tcolor:ColorCode\n\t\t})\n\t}\n\tonCancel =() => {\n\t\tthis.setState({\n\t\t\tlabelName:\"\",\n\t\t\tdiscription:\"\",\n\t\t\tcolor:this.state.color\n\t\t})\n\t} \n\tdeleteLabel = (index) => {\n\t\tvar newarray = [...this.state.list];\n\t\tif (window.confirm(`Are you sure that you want to delete ${newarray[index]}`)) { \n\t\t\tdelete newarray[index];\n\t\t\tthis.setState({ \t\t\n\t\t\t\tlist:newarray.filter(x=>x)\n\t\t\t })\n\t\t}\n\t}\n\teditButton = (index) => {\n\t\tthis.setState({eventIndex:index})\n\t}\n\tEdit = (e3) => {\n\t\tthis.setState({eventIndex:null})\n\t}\n\tchangeEditVal = (e2) =>{\n\t\tlet newarray=[...this.state.list];\n\t\tnewarray[e2.target.name].label=e2.target.value\n\t\tthis.setState({list:newarray})\t\n\t}\n\tchangeEditDis = (e2) =>{\n\t\tlet newarray=[...this.state.list];\n\t\tnewarray[e2.target.name].dis=e2.target.value\n\t\tthis.setState({list:newarray})\n\t}\n\tonEditColor = (e2) =>{\n\t\tvar ColorCode = 'rgb(' + (Math.floor(Math.random() * 256)) + ',' + (Math.floor(Math.random() * 256)) + ',' + (Math.floor(Math.random() * 256)) + ')'\n\t\tlet newarray=[...this.state.list];\n\t\tnewarray[e2].color=ColorCode\n\t\tthis.setState({list:newarray})\t\n\t}\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t<div className = \"container\">\n\t\t\t\t<div className= \"form\">\n\t\t\t\t\t<p><span className=\"label-preview\"  style={{backgroundColor:this.state.color}}>{this.state.labelName || 'Live preview'}</span></p>\n\t\t\t\t\t<div className=\"input-box\" >\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t<p> Label Name </p>\n\t\t\t\t\t\t<input name='labelname' type=\"text\" onChange={this.changeVal} placeholder=\"Label Name\" value={this.state.labelName}></input>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t<p> Label Discription </p>\n\t\t\t\t\t\t<input name='discription' type=\"text\" onChange={this.changeDis} placeholder=\"Label Discription\" value={this.state.discription}></input>\n\t\t\t\t\t\t</div>\t\t\t\t\t\t\n\t\t\t\t\t\t<div className=\"button-change-inner\">\n\t\t\t\t\t\t<button onClick={this.onColor} style={{backgroundColor:this.state.color}}><i className=\"fa fa-refresh\"></i></button>\n\t\t\t\t\t\t<input type=\"text\" value={this.state.color}></input> \n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"submit\">\t\n\t\t\t\t\t\t\t<button onClick={this.onCancel}> Cancel </button>\n\t\t\t\t\t\t\t{this.state.labelName===\"\"\n\t\t\t\t\t\t\t? <button  style={{backgroundColor:'#94d3a2',color:\"white\"}} disabled>Create</button>\n\t\t\t\t\t\t\t: <button  onClick={this.onSubmit} style={{backgroundColor:'#28a745',color:\"white\"}}>Create</button>\t      \t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className =\"box\">\n\t\t\t\t\t<div className = \"box-header\">\n\t\t\t\t\t\t<p>{this.state.list.length} Labels</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div>{this.state.list.map((element,index)=>{\n\t\t\t\t\t\t\treturn(\t\n\t\t\t\t\t\t\t\t<div className= \"form-inner\">\n\n\t\t\t\t\t\t\t\t{this.state.eventIndex===index?\n\n\t\t\t\t\t\t\t\t<div className=\"input-box-inner\">\t\n\n\t\t\t\t\t\t\t\t\t\t<p className=\"label-preview-inner\" key={index} name={element.label}>\n\t\t\t\t\t\t\t\t\t\t\t<span style={{backgroundColor:element.color}}>\n\t\t\t\t\t\t\t\t\t\t\t\t{element.label}\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<p> Label Name </p>\n\t\t\t\t\t\t\t\t\t\t<input name='labelname' type=\"text\" onChange={this.changeEditVal} name={index} placeholder=\"Label Name\" value={element.label}></input>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div>\t\t\t\n\t\t\t\t\t\t\t\t\t\t<p> Label Discription </p>\n\t\t\t\t\t\t\t\t\t\t<input name='discription' type=\"text\" onChange={this.changeEditDis} name={index} placeholder=\"Label Discription\" value={element.dis}></input>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"button-change-inner\">\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<button className=\"button-change\" onClick={()=>this.onEditColor(index)} name={index} style={{backgroundColor:element.color}}><i className=\"fa fa-refresh\"></i></button>\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" value={element.color}></input> \n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<button className=\"submit\" onClick={this.Edit}> Update </button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<div className=\"label-preview-inner\">\n\t\t\t\t\t\t\t\t<p key={index} name={element.label}>\n\t\t\t\t\t\t\t\t\t\t\t<span style={{backgroundColor:element.color}}>\n\t\t\t\t\t\t\t\t\t\t\t\t{element.label}\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</div>\t\n\t\t\t\t\t\t\t\t<div> {element.dis} </div>\n\t\t\t\t\t\t\t\t<div className=\"inner-buttons\"> \n\t\t\t\t\t\t\t\t\t\t<button className=\"submit-button\" onClick={()=>this.editButton(index)}>Edit</button>\n\t\t\t\t\t\t\t\t\t\t<button className=\"submit-button\" style={{margin:'20px'}} onClick={() => {this.deleteLabel(index)}}> remove label </button>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t</div>\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}</div>\n\n\t\t\t\t\t</div>\t\n\t\t\t\t</div>  \n\t\t\t\t</div>\t\n\t\t\t\t<h1 class=\"title\">Github Labels Application By Saurabh Ambardekar</h1>\n\t\t\t\t</div>\t\t\t\t\n\t\t)\n\t}\n}\nexport default NewItem;\n\n\n","import React from 'react';\nimport './App.css';\nimport NewItem from './NewItem';\n\nfunction App() {\n\t\n\treturn(\n\t\t<div className=\"App\">\n\t\t<NewItem/>\n\t\t</div>\n\t)\n\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}